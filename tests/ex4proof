(assume PQ (=> p q))
(assume QR (=> q r))
(assume RS (=> r s))
(assume ST (=> s t))
(assume NQS (not (=> q s)))
(step t6 (cl (= (not (=> q s)) (and q (not s)))) :rule bool_simplify)
(step t7 (cl (not (= (not (=> q s)) (and q (not s)))) (not (not (=> q s))) (and q (not s))) :rule equiv_pos2)
(step t8 (cl (not (not (not (=> q s)))) (=> q s)) :rule not_not)
(step t9 (cl (not (= (not (=> q s)) (and q (not s)))) (=> q s) (and q (not s))) :rule th_resolution :premises (t8 t7))
(step t10 (cl (and q (not s))) :rule th_resolution :premises (NQS t6 t9))
(step t11 (cl (not p) q) :rule implies :premises (PQ))
(step t12 (cl (not q) r) :rule implies :premises (QR))
(step t13 (cl (not r) s) :rule implies :premises (RS))
(step t14 (cl (not s) t) :rule implies :premises (ST))
(step t15 (cl q) :rule and :premises (t10))
(step t16 (cl (not s)) :rule and :premises (t10))
(step t17 (cl r) :rule resolution :premises (t12 t15))
(step t18 (cl) :rule resolution :premises (t13 t16 t17))
